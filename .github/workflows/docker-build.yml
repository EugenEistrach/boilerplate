name: Build and Push Docker Image

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set lowercase repository name
        id: repo_name
        run: echo "REPO_NAME=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ghcr.io/${{ steps.repo_name.outputs.REPO_NAME }}:latest
          build-args: |
            NEXT_PUBLIC_SENTRY_DSN=${{ secrets.NEXT_PUBLIC_SENTRY_DSN }}
            SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}
            SENTRY_ORG=${{ secrets.SENTRY_ORG }}
            SENTRY_PROJECT=${{ secrets.SENTRY_PROJECT }}

      - name: Set Coolify secrets as environment variables
        run: |
          echo "COOLIFY_WEBHOOK_URL=${{ secrets.COOLIFY_WEBHOOK_URL }}" >> $GITHUB_ENV
          echo "COOLIFY_API_KEY=${{ secrets.COOLIFY_API_KEY }}" >> $GITHUB_ENV

      - name: Trigger Coolify Deployment
        if: success()
        env:
          COOLIFY_WEBHOOK_URL: ${{ secrets.COOLIFY_WEBHOOK_URL }}
          COOLIFY_API_KEY: ${{ secrets.COOLIFY_API_KEY }}
        run: |
          if [ -n "$COOLIFY_WEBHOOK_URL" ] && [ -n "$COOLIFY_API_KEY" ]; then
            curl -X GET "$COOLIFY_WEBHOOK_URL" --header "Authorization: Bearer $COOLIFY_API_KEY"
          else
            echo "Skipping Coolify deployment: webhook URL or API key not set"
          fi
